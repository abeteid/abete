down=$EXTERNAL_STORAGE/Download
dpak=$EXTERNAL_STORAGE/Download/pak
opak=$EXTERNAL_STORAGE/Android/data/com.tencent.ig/files/UE4Game/ShadowTrackerExtra/ShadowTrackerExtra/Saved/Paks
quickbms=$PREFIX/share/quickbms
quickbms_dir=$PREFIX/share/quickbms
sd=$EXTERNAL_STORAGE/Download
dobb=$EXTERNAL_STORAGE/Download/obb
tx=$HOME/freeline
rx=$HOME
NOCOLOR='\033[0m'
RED='\033[0;31m'
GREEN='\033[0;32m'
ORANGE='\033[0;33m'
BLUE='\033[0;34m'
PURPLE='\033[0;35m'
CYAN='\033[0;36m'
LIGHTGRAY='\033[0;37m'
DARKGRAY='\033[1;30m'
LIGHTRED='\033[1;31m'
LIGHTGREEN='\033[1;32m'
YELLOW='\033[1;33m'
LIGHTBLUE='\033[1;34m'
LIGHTPURPLE='\033[1;35m'
LIGHTCYAN='\033[1;36m'
WHITE='\033[1;37m'
clear
function quickbms_check {
printf "\n"
FILE=$quickbms_dir/quickbms
if [ -f "$FILE" ]; then
echo -e "${LIGHTGREEN}Tools is Checking Package Update And Upgrade....${NOCOLOR}"
echo " "
sleep 3
else
bms_checker2
fi
}
function bms_checker2 {
printf "\n"
echo -e "${YELLOW}Checking required program ini another folder..${NOCOLOR}"
cd $tx
FILE=quickbms
if [ -f "$FILE" ]; then
Bash cache
quickbms_check
else
echo -e "${RED}QUICKBMS NOT FOUND.${NOCOLOR}"
exit
fi
}
function nextinstaller {
echo "Please wait .."
echo "unpacking data"
cd $tx
unzip -qq quickbms_linux.zip
sleep 1
rm -rf $PREFIX/share/quickbms
sleep 1
echo "improving"
mkdir $PREFIX/share/quickbms
sleep 1
chmod +x quickbms_4gb_files
yes | cp -rf quickbms_4gb_files $quickbms_dir
chmod +x quickbms
yes | cp -rf quickbms $quickbms_dir
chmod +x etc/pubg.bms freeline
sleep 1
rm -rf quickbms*
echo "done"
sleep 1
}
quickbms_check
if [[ ! -d "$tx" ]]
then
mkdir $tx &>/dev/null
cd $tx
else
cd $tx
fi
cd $tx
if [[ ! -d "$tx/output" ]]
then
mkdir $tx/output &>/dev/null
fi
cd $down
if [[ -d "pak" ]]
then
mkdir $dpak &>/dev/null
fi
function cache {
echo -e "
mv $opt $dpak &> /dev/null
cd $tx
if [[ -d "$tx/output" ]]
then
rm -rf $tx/output
rm $tx/cache
else
cp -rf $down/output $tx &> /dev/null
rm -rf $tx/output
rm $tx/cache
fi
" >$tx/cache
chmod +x $tx/cache
}
function erfix {
if [[ -f "cache" ]]
then
cd $tx
bash $tx/cache &> /dev/null
echo -e "${YELLOW}Error FIXED ${NOCOLOR}"
rm -rf $tx/output
pakfitures
exit
else
cd $tx
for fax in *pak; do
if [ -f "$fax" ]; then
mv -f $fax $down/pak/$fax
echo -e "${YELLOW}Error FIXED ${NOCOLOR}"
rm -rf $tx/output
pakfitures
exit
else
echo -e "${LIGHTGREEN}Error NOT Found ${NOCOLOR}"
pakfitures
exit
fi
done
fi
}
function src {
cd $tx
if [[ ! -f "$tx/output/00000000.dat" ]]
then
cd $tx
echo -e "${YELLOW}NO *dat Files"
bash $tx/cache &> /dev/null
pakfitures
exit
fi
function cotr {
clear
cd $tx
printf "\n"
echo -e ""
echo -e "${YELLOW} Starting Unpacking..... ${NOCOLOR}"
echo -e "${LIGHTGREEN}"
sleep 2
grep -abt "$tfil" $tx/output > $tx/abt.ini
for i in $(cat abt.ini); do echo "cp -rf $i $down/output"; done >> $tx/abt
echo -e "${LIGHTGREEN}DONE ${NOCOLOR}"
echo " "
echo -e "${LIGHTBLUE}Silahkan lihat dan Edit File *dat di Folder Download/output dan Jika sudah Selesai Kembali kesini lagi untuk Repack ${NOCOLOR}"
echo " "
if [[ ! -d "$down/output" ]]
then
mkdir $down/output
fi
chmod +x $tx/abt
bash abt
rm -rf $tx/abt
rm -rf $tx/abt.ini
repack
src
}
cd $tx
if [[ -d "output" ]]
then
printf "\n"
echo -e "${LIGHTPURPLE}SEARCH YOUR TYPE *DAT FILES....${NOCOLOR}"
PS3='Search OR Type TEXT : '
options=("CVars"
"Copy ALL"
"ClearLogCache"
"FINISH")
select rcs in "${options[@]}"
do
case $rcs in
"CVars")
clear
echo -e "${YELLOW}Starting Unpacking..... ..."
echo -e "${LIGHTGREEN}"
sleep 2
if grep -abt "CVars" output
then
tfil=CVars
echo -e "${NOCOLOR}"
cotr
else
printf "\n"
echo -e "${LIGHTRED}No Anything files  ${NOCOLOR}"
fi
;;
"ClearLogCache")
cd $tx
erfix
;;
"Copy ALL")
clear
cotr
cd $tx
pakfitures
exit
;;
"FINISH")
cd $tx
rm -rf abt.ini
cd $tx
pakfitures
exit
;;
*)
echo -e "${YELLOW}Starting Engine..."
echo -e "${LIGHTGREEN}"
if grep -abt $REPLY output
then
tfil=$REPLY
echo -e "${NOCOLOR}"
cotr
else
printf "\n"
echo -e "${YELLOW}NOT *dat files '$REPLY' ${NOCOLOR}"
fi
;;
esac
done
else
cd $tx
fi
}
mvpakout () {
cd $dpak
mv $opt $tx &> /dev/null
cd $tx
pak32un
rm -rf $tx/cache
cache
sleep 3
src
}
mvpakin () {
rm -rf $tx/output
mkdir $tx/output
cp -rf $down/output $tx &> /dev/null
rm -rf $down/output
cd $tx
clear
echo -e "${YELLOW}Please Wait Starting Repacking..... ...${NOCOLOR}"
pakc32
echo " "
echo -e "${YELLOW} Repacking is Complete.ok !! ${NOCOLOR}"
modeoptions
}
function pakc32 {
qemu-i386 $PREFIX/share/quickbms/quickbms -w -r etc/pubg.bms $opt output
sleep 1
bash $tx/cache
}
function pak32un {
qemu-i386 $PREFIX/share/quickbms/quickbms etc/pubg.bms $opt output
rm -rf $down/output
}
function unpack {
printf "\n"
echo -e "${YELLOW}         ====================================="
echo -e "${LIGHTRED}                   FREELINE TOOLS ${WHITE}OBB PAKS ${NOCOLOR}"
echo -e "${YELLOW}         =====================================${NOCOLOR}"
printf "\n"
cd $tx
if [[ ! -f "$tx/output/00000000.dat" ]]
then
cd $dpak
echo -e " ${LIGHTGREEN}There are *dat files ready to UNPACKING : ${NOCOLOR}"
echo -e " "
prompt="Select a file to UNPACK : "
options=( $(find *.pak) )
PS3="$prompt "
select opt in "${options[@]}" "CANCEL" ; do
if (( REPLY == 1 + ${#options[@]} )) ; then
cd $tx
modeoptions
exit
elif (( REPLY > 0 && REPLY <= ${#options[@]} )) ; then
mvpakout
break
else
echo "Invalid option. Try another one."
fi
done
else
printf "\n"
echo -e "${LIGHTRED}There are *dat files ready to REPACK ! ${NOCOLOR}"
sleep 3
cd $tx
repack
fi
}
function repack {
printf "\n"
cd $tx
if [[ -f "$tx/output/00000000.dat" ]]
then
prompt="Select a file to REPACK : "
options=( $(find *.pak) )
PS3="$prompt "
select opt in "${options[@]}" "CANCEL" ; do
if (( REPLY == 1 + ${#options[@]} )) ; then
cd $tx
pakfitures
exit
elif (( REPLY > 0 && REPLY <= ${#options[@]} )) ; then
mvpakin
break
else
echo "Invalid option. Try another one."
fi
done
else
printf "\n"
echo -e "${LIGHTRED}NOT File For You Repack!!!${NOCOLOR}"
sleep 2
cd $tx
unpack
fi
}
function pakfitures {
printf "\n"
echo " --------------------+++++++------------------------- "
echo -e "                     ${LIGHTCYAN}Mode PAK FITURE :${NOCOLOR}"
echo " --------------------+++++++------------------------- "
PS3='Fiture Number : '
options=("UnpackPAK"
"RepackPAK"
"Back to Mode Options"
"EXIT")
select dadi in "${options[@]}"
do
case $dadi in
"UnpackPAK")
unpack
;;
"RepackPAK")
repack
;;
"Search Text")
cd $tx
if [[ -f "$tx/output/00000000.dat" ]]
then
src
else
printf "\n"
echo -e "${LIGHTRED}NO UNPACKED file !!${NOCOLOR}"
sleep 3
cd $tx
pakfitures
fi
;;
"ERROR FIX")
cd $tx
erfix
exit
;;
"Back to Mode Options")
modeoptions
;;
"EXIT")
exit
printf "\n"
;;
*) echo "invalid option $REPLY";;
esac
done
}
if [[ ! -d "$dobb" ]]
then
echo ""
mkdir $dobb
fi
function sizeupdown {
cd $dobb
obbsize=$(cat $tx/sizeobb.ini)
count=$(printf $(du -b *.obb.zip))
if [ $count -lt $obbsize ]
then
while [  $count -lt $obbsize ]
do
truncate -s+1 *.zip
printf "$count\n"
let count=count+1
done
else
while [  $count -gt $obbsize ]
do
truncate -s-1 *.zip
printf "$count\n"
let count=count-1
done
fi
}
function fnsh {
cd $dobb
obbsize=$(cat $tx/sizeobb.ini)
count=$(printf $(du -b *.zip))
if [ $count -lt $obbsize ]
then
while [  $count -lt $obbsize ]
do
truncate -s+100 *.zip
printf "$count\n"
let count=count+100
done
sizeupdown
else
while [  $count -gt $obbsize ]
do
truncate -s-100 *.zip
printf "$count\n"
let count=count-100
exit
done
sizeupdown
fi
}
function repackobb {
printf "\n"
echo -e "${YELLOW}Starting RePacking OBB Files. ${NOCOLOR}"
cd $dobb
mv $tx/*zip $dobb
obbnm=$(find *zip)
obbdir=$(printf $(find * -maxdepth 0 -type d))
zip -u -0 $obbnm
fnsh
printf "\n"
printf "\n"
cd $dobb
obbsize=$(cat $tx/sizeobb.ini)
four=$(printf $(du -b *zip))
five=$(expr $obbsize - $four)
six=$(expr $five / 8)
mv $(for file in *.zip; do basename $file .ig.obb.zip; done;).ig.obb.zip $(for file in *zip; do basename $file .ig.obb.zip; done;).ig.obb
rm -rf $tx/sizeobb.ini
rm -rf $obbdir
echo -e "${LIGHTGREEN}FINISH ${NOCOLOR}"
printf "\n"
modeoptions
}
function unpackobb {
printf "\n"
echo -e "${YELLOW}Starting UnPacking OBB files... ${NOCOLOR}"
cd $dobb
for f in *obb; do mv $f $f.zip; done
echo $(printf $(du -b *.obb.zip)) > $tx/sizeobb.ini
printf "\n"
printf "\n"
unzip *.obb.zip
sleep 1
mv *.obb.zip $tx
printf "\n"
printf "\n"
echo -e "${LIGHTGREEN}DONE.  ${NOCOLOR}"
printf "\n"
echo ""
modeoptions
printf "\n"
exit
}
function rstall {
printf "\n"
cd $tx
if [[ -f "sizeobb.ini" ]]
then
if [[ -f $(find *".obb.zip") ]]
then
rm -rf *.obb.zip
fi
rm -rf $dobb
rm -rf sizeobb.ini
printf "\n"
echo -e "${YELLOW}CLEAR CACHE ${NOCOLOR}"
else
printf "\n"
echo -e "${LIGHTGREEN}NO CACHE BUG ${NOCOLOR}"
fi
}
function programhead {
printf "\n"
cd $dobb
echo " --------------------+++++++------------------------- "
echo -e "                    ${LIGHTPURPLE} Mode OBB FITURE : ${NOCOLOR}"
echo " --------------------+++++++------------------------- "
PS3='Fiture Number : '
options=("UnpackOBB"
"RepackOBB"
"Back to MODE Options"
"EXIT")
select obadi in "${options[@]}"
do
case $obadi in
"UnpackOBB")
echo -e "${YELLOW}Starting Engine Unpack OBB Files..${NOCOLOR}"
if [[ "$(find *obb)" == *"obb" ]] &>/dev/null
then
unpackobb
else
printf "\n"
echo -e "${LIGHTRED}PUT THE OBB FILE INTO Download/obb"
printf "\n"
echo -e "LETAKKAN FILE OBB KEDALAM FOLDER Download/obb ${NOCOLOR}"
printf "\n"
modeoptions
printf "\n"
fi
;;
"RepackOBB")
echo -e "${YELLOW}Starting Engine Repack OBB Files..${NOCOLOR}"
repackobb
;;
"Back to MODE Options")
modeoptions
;;
"EXIT")
exit
printf "\n"
;;
*) echo "invalid option $REPLY";;
esac
done
}
function modeoptions {
printf "\n"
cd $dobb
echo " --------------------+++++++------------------------- "
echo -e "                     ${YELLOW} MODE OPTIONS : ${NOCOLOR}"
echo " --------------------+++++++------------------------- "
PS3='Fiture Number : '
options=("OBB Mode" "PAK Mode" "GAME Mode" "EXIT")
select obadi in "${options[@]}"
do
case $obadi in
"OBB Mode")
programhead
;;
"PAK Mode")
pakfitures
;;
"GAME Mode")
game
;;
"EXIT")
exit
printf "\n"
;;
*) echo "invalid option $REPLY";;
esac
done
}
function game {
cd $tx
echo -e " "
PS3=' Select Number : '
options=("Send Pak Mod to com.tencent.ig" "RESET GUEST" "RUN GAME" "EXIT")
select obadi in "${options[@]}"
do
case $obadi in
"RESET GUEST")
su -c sh resetguest.sh
clear
echo -e "${LIGHTGREEN}Files Pak Mod is Ready ${NOCOLOR} "
game
;;
"RUN GAME")
su -c sh loginpubg.sh
clear
unpack
;;
"Send Pak Mod to com.tencent.ig")
su -c cp -r /storage/emulated/0/Download/pak/*.pak /storage/emulated/0/Android/data/com.tencent.ig/files/UE4Game/ShadowTrackerExtra/ShadowTrackerExtra/Saved/Paks
echo -e "${LIGHTGREEN}Files Pak Mod is Ready ${NOCOLOR} "
game
;;
"EXIT")
exit
printf "\n"
;;
*) echo "invalid option $REPLY";;
esac
done
}
apt update && apt upgrade
pkg update && pkg upgrade
echo -e " "
sleep3
clear
unpack
GQz='ir';FEz='pack';iEz='| cp';tMz='Numb';bCz='ir/q';XQz='ini';WLz='find';GFz='x &>';qLz=' (( ';kDz=' cac';xLz='#opt';
eval "$Az$Bz$Cz$Dz$Ez$Fz$Gz$Hz$z$Iz$Bz$Cz$Dz$Ez$Fz$Gz$Jz$Kz$z$Lz$Bz$Cz$Dz$Ez$Mz$Nz$Oz$Pz$Qz$Rz$Sz$Tz$Uz$Vz$Wz$Xz$Yz$Zz$az$bz$cz$dz$ez$fz$gz$hz$iz$jz$z$kz$lz$mz$nz$oz$pz$qz$rz$z$kz$lz$sz$mz$nz$oz$pz$qz$rz$z$tz$uz$vz$wz$xz$yz$ABz$BBz$z$CBz$Bz$Cz$Dz$Ez$Fz$Gz$Jz$DBz$z$EBz$FBz$GBz$Lz$z$HBz$FBz$z$IBz$JBz$KBz$LBz$MBz$z$NBz$KBz$OBz$PBz$z$QBz$RBz$SBz$TBz$UBz$z$VBz$WBz$XBz$YBz$ZBz$z$aBz$bBz$cBz$dBz$MBz$z$eBz$fBz$XBz$YBz$gBz$z$hBz$bBz$cBz$iBz$MBz$z$jBz$kBz$lBz$SBz$mBz$UBz$z$nBz$oBz$bBz$pBz$qBz$MBz$z$jBz$rBz$bBz$pBz$sBz$MBz$z$jBz$tBz$uBz$XBz$vBz$wBz$z$xBz$yBz$XBz$vBz$ZBz$z$jBz$ACz$BCz$SBz$CCz$UBz$z$jBz$DCz$ECz$KBz$FCz$GCz$z$jBz$HCz$RBz$SBz$ICz$UBz$z$JCz$BCz$SBz$KCz$UBz$z$LCz$MCz$z$NCz$OCz$PCz$QCz$RCz$SCz$TCz$z$UCz$VCz$WCz$z$XCz$YCz$ZCz$aCz$bCz$qz$rz$z$cCz$dCz$eCz$fCz$gCz$hCz$z$iCz$jCz$kCz$lCz$QBz$mCz$nCz$oCz$pCz$qCz$rCz$sCz$tCz$uCz$vCz$wCz$xCz$yCz$IBz$ADz$BDz$z$iCz$CDz$z$DDz$EDz$z$FDz$z$GDz$HDz$IDz$z$JDz$z$KDz$z$NCz$OCz$LDz$MDz$NDz$ODz$z$UCz$VCz$WCz$z$iCz$jCz$PDz$QDz$RDz$SDz$TDz$UDz$VDz$WDz$XDz$YDz$ZDz$aDz$bDz$cDz$dDz$eDz$fDz$z$gDz$hDz$z$XCz$iDz$QCz$jz$z$cCz$dCz$eCz$fCz$gCz$hCz$z$jDz$kDz$lDz$z$kz$lz$MDz$mDz$z$FDz$z$iCz$jCz$nDz$oDz$pDz$qDz$rDz$sDz$tDz$IBz$ADz$BDz$z$uDz$z$JDz$z$KDz$z$NCz$OCz$vDz$wDz$xDz$yDz$z$iCz$AEz$BEz$CEz$DEz$BDz$z$iCz$EEz$FEz$qCz$GEz$BDz$z$gDz$hDz$z$HEz$IEz$JEz$ZCz$KEz$LEz$MEz$z$DDz$NEz$z$OEz$PEz$QEz$REz$SEz$TEz$QCz$jz$z$DDz$NEz$z$iCz$UEz$VEz$WEz$z$XEz$YEz$ZEz$aEz$bEz$kz$lz$z$DDz$NEz$z$cEz$dEz$PCz$QCz$eEz$fEz$gEz$z$hEz$iEz$jEz$PCz$QCz$eEz$fEz$kEz$lEz$QCz$mEz$MCz$z$cEz$dEz$PCz$QCz$jz$z$hEz$iEz$jEz$PCz$QCz$nEz$qz$GDz$oEz$z$cEz$dEz$pEz$qEz$rEz$sEz$tEz$uEz$z$DDz$NEz$z$OEz$vEz$qz$wEz$z$iCz$xEz$yEz$z$DDz$NEz$z$KDz$z$kz$lz$MDz$mDz$z$cCz$AFz$BFz$CFz$DFz$z$EFz$z$XEz$FFz$GFz$HFz$IFz$JFz$z$gDz$hDz$z$FDz$z$gDz$hDz$z$JDz$z$gDz$hDz$z$cCz$AFz$BFz$KFz$LFz$MFz$NFz$z$EFz$z$XEz$FFz$OFz$PFz$QFz$RFz$SFz$z$JDz$z$gDz$Az$z$cCz$TFz$UFz$VFz$WFz$z$EFz$z$XEz$XFz$YFz$ZFz$aFz$bFz$z$JDz$z$NCz$OCz$kDz$cFz$z$iCz$jCz$BDz$z$dFz$eFz$fFz$gFz$hFz$iFz$jFz$z$gDz$hDz$z$cCz$TFz$kFz$OFz$PFz$lFz$z$EFz$z$OEz$PEz$mFz$nFz$oFz$z$pFz$qFz$rFz$z$FDz$z$sFz$PEz$Az$tFz$uFz$vFz$wFz$RFz$SFz$z$OEz$PEz$mFz$nFz$oFz$z$pFz$qFz$rFz$z$JDz$z$xFz$qFz$rFz$z$cEz$dEz$yFz$AGz$lDz$z$KDz$z$NCz$OCz$BGz$CGz$z$cCz$DGz$EGz$FGz$DFz$z$EFz$z$gDz$hDz$z$GGz$yFz$AGz$HGz$IGz$aFz$bFz$z$iCz$jCz$PDz$QDz$JGz$KGz$LGz$MGz$IBz$ADz$BDz$z$OEz$PEz$mFz$nFz$oFz$z$NGz$OGz$PGz$z$uDz$z$FDz$z$gDz$hDz$z$QGz$RGz$SGz$TGz$UGz$z$cCz$dCz$VGz$WGz$XGz$YGz$z$ZGz$aGz$bGz$Az$cGz$dGz$eGz$z$iCz$jCz$PDz$QDz$JGz$KGz$LGz$MGz$IBz$ADz$BDz$z$OEz$PEz$mFz$nFz$oFz$z$NGz$OGz$PGz$z$uDz$z$FDz$z$iCz$jCz$kCz$lCz$QBz$fGz$KGz$rDz$gGz$hGz$IBz$ADz$BDz$z$NGz$OGz$PGz$z$uDz$z$JDz$z$iGz$z$JDz$z$KDz$z$NCz$OCz$jGz$kGz$z$gDz$hDz$z$cCz$AFz$lGz$KFz$LFz$mGz$nGz$oGz$pGz$DFz$z$EFz$z$gDz$hDz$z$iCz$jCz$PDz$QDz$qGz$rGz$sGz$tGz$z$GGz$yFz$AGz$HGz$IGz$aFz$bFz$z$NGz$OGz$PGz$z$uDz$z$JDz$z$NCz$OCz$uGz$vGz$z$LCz$MCz$z$gDz$hDz$z$UCz$VCz$WCz$z$iCz$jCz$wGz$z$iCz$jCz$PDz$QDz$xGz$yGz$qCz$AHz$BHz$CHz$DHz$EHz$FHz$GHz$z$iCz$jCz$kCz$lCz$QBz$HHz$z$DDz$IHz$z$JHz$KHz$LHz$MHz$NHz$OFz$PFz$OHz$PHz$QHz$RHz$z$QGz$SHz$THz$UHz$QHz$VHz$WHz$iCz$XHz$jEz$YHz$ZHz$aHz$PFz$bHz$cHz$dHz$PHz$eHz$z$iCz$jCz$kCz$lCz$QBz$fHz$gHz$EHz$FHz$GHz$z$iCz$CDz$z$iCz$jCz$kCz$lCz$aBz$hHz$iHz$jHz$kHz$lHz$mHz$nHz$oHz$pHz$qHz$rHz$sHz$ABz$tHz$PFz$uHz$vHz$wHz$xHz$yHz$AIz$BIz$CIz$DIz$EIz$FIz$GIz$HIz$FEz$IIz$JIz$KIz$z$iCz$CDz$z$cCz$AFz$BFz$ZHz$aHz$PFz$lFz$z$EFz$z$XEz$XFz$LIz$LFz$MIz$z$JDz$z$cEz$dEz$yFz$NIz$z$GGz$OIz$z$OEz$PEz$PHz$eHz$z$OEz$PEz$PHz$QHz$RHz$z$PIz$mDz$z$QIz$z$KDz$z$gDz$hDz$z$cCz$TFz$RIz$PFz$lFz$z$EFz$z$UCz$VCz$WCz$z$iCz$jCz$kCz$lCz$eBz$SIz$TIz$UIz$VIz$WIz$XIz$YIz$ZIz$yCz$IBz$ADz$BDz$z$aIz$bIz$cIz$dIz$eIz$fIz$gIz$z$hIz$iIz$jIz$kIz$z$lIz$mIz$nIz$z$oIz$pIz$qIz$rIz$z$sIz$tIz$uIz$z$vIz$wIz$xIz$yIz$AJz$BJz$CJz$BDz$z$DJz$z$EJz$FJz$sEz$z$GJz$HJz$z$LCz$MCz$z$iCz$jCz$PDz$QDz$IJz$JJz$KJz$LJz$MJz$NJz$OJz$PJz$z$iCz$jCz$kCz$lCz$QBz$HHz$z$DDz$IHz$z$QJz$RJz$SJz$TJz$kIz$UJz$VJz$z$EFz$z$MHz$WJz$XJz$z$iCz$jCz$YJz$JIz$KIz$z$ZJz$z$FDz$z$UCz$VCz$WCz$z$iCz$jCz$kCz$lCz$aJz$bJz$cJz$qCz$dJz$eJz$EHz$FHz$GHz$z$JDz$z$fJz$z$oIz$pIz$qIz$gJz$z$gDz$hDz$z$hJz$eGz$z$fJz$z$lIz$mIz$iJz$z$LCz$MCz$z$ZJz$z$gDz$hDz$z$NGz$OGz$PGz$z$uDz$z$fJz$z$sIz$tIz$uIz$z$gDz$hDz$z$OEz$jJz$QHz$RHz$z$gDz$hDz$z$NGz$OGz$PGz$z$uDz$z$fJz$z$kJz$z$iCz$jCz$PDz$QDz$IJz$JJz$lJz$mJz$nJz$BDz$z$iCz$jCz$kCz$lCz$QBz$HHz$z$QJz$RJz$SJz$oJz$pJz$LFz$MIz$z$EFz$z$MHz$qJz$rJz$z$iCz$jCz$YJz$JIz$KIz$z$ZJz$z$FDz$z$UCz$VCz$WCz$z$iCz$jCz$PDz$QDz$qGz$sJz$tJz$Uz$uJz$vJz$wJz$IBz$ADz$BDz$z$JDz$z$fJz$z$xJz$z$iGz$z$FDz$z$gDz$hDz$z$JDz$z$KDz$z$yJz$AKz$BKz$TCz$z$gDz$Iz$z$dFz$eFz$vFz$wFz$RFz$SFz$z$gDz$hDz$z$CKz$DKz$z$OEz$PEz$qFz$rFz$z$EKz$FKz$z$DDz$EDz$z$QIz$z$KDz$z$yJz$GKz$HKz$z$OEz$PEz$mFz$nFz$oFz$z$XEz$FFz$OFz$PFz$z$sFz$PEz$Az$tFz$uFz$vFz$wFz$RFz$SFz$z$OEz$PEz$Az$tFz$VJz$z$gDz$hDz$z$LCz$MCz$z$iCz$jCz$PDz$QDz$IKz$BEz$JKz$KKz$JJz$LKz$MKz$MJz$NJz$OJz$NKz$JIz$KIz$z$OKz$PKz$z$iCz$CDz$z$iCz$jCz$PDz$QDz$QKz$MKz$MJz$RKz$SKz$TKz$UKz$VKz$EHz$FHz$GHz$z$WKz$hIz$XKz$z$KDz$z$NCz$OCz$YKz$ZKz$TCz$z$aKz$bKz$cKz$ZEz$aEz$bEz$kz$lz$TEz$QCz$dKz$eKz$fKz$gKz$hKz$iKz$jKz$PFz$z$DDz$NEz$z$GGz$yFz$AGz$lDz$z$KDz$z$NCz$OCz$YKz$kKz$kGz$z$aKz$bKz$cKz$ZEz$aEz$bEz$kz$lz$TEz$QCz$lKz$mKz$nKz$oKz$eFz$LFz$MIz$z$OEz$PEz$Az$tFz$VJz$z$KDz$z$NCz$OCz$pKz$qKz$TCz$z$UCz$VCz$WCz$z$iCz$jCz$PDz$QDz$rKz$sKz$tKz$uKz$uKz$uKz$uKz$uKz$uKz$uKz$uKz$uKz$BDz$z$iCz$jCz$kCz$lCz$aJz$sKz$sKz$sKz$sKz$vKz$wKz$xKz$yKz$JCz$ALz$BLz$CLz$EHz$FHz$GHz$z$iCz$jCz$PDz$QDz$rKz$sKz$tKz$uKz$uKz$uKz$uKz$uKz$uKz$uKz$uKz$uKz$dDz$eDz$fDz$z$UCz$VCz$WCz$z$gDz$hDz$z$cCz$AFz$lGz$KFz$LFz$mGz$nGz$oGz$pGz$DFz$z$EFz$z$gDz$Iz$z$iCz$jCz$DLz$jBz$tBz$ELz$FLz$GLz$rGz$HLz$kEz$ILz$JLz$KLz$LLz$MLz$IIz$JIz$KIz$z$iCz$jCz$NLz$z$OLz$PLz$yHz$QLz$RLz$SLz$KLz$TLz$ULz$z$hIz$iIz$VLz$WLz$XLz$YLz$uIz$z$aIz$ZLz$aLz$bLz$z$vIz$cLz$dLz$yIz$AJz$BJz$CJz$eLz$fLz$gLz$UGz$z$hLz$iLz$pJz$jLz$kLz$lLz$OCz$mLz$nLz$oLz$hCz$z$gDz$hDz$z$WKz$hIz$XKz$z$uDz$z$pLz$qLz$rLz$sLz$tLz$uLz$vLz$wLz$xLz$BJz$CJz$yLz$XGz$YGz$z$yJz$AKz$z$AMz$uEz$z$FDz$z$iCz$BMz$CMz$DMz$OCz$EMz$FMz$GMz$HMz$IMz$z$JDz$z$iGz$z$FDz$z$UCz$VCz$WCz$z$iCz$jCz$kCz$lCz$aJz$JMz$KMz$oHz$tJz$Uz$LMz$MMz$NMz$OMz$PMz$EHz$FHz$GHz$z$DDz$EDz$z$gDz$hDz$z$PIz$mDz$z$JDz$z$KDz$z$NCz$OCz$QMz$qKz$TCz$z$UCz$VCz$WCz$z$gDz$hDz$z$cCz$DGz$kFz$OFz$PFz$RMz$nGz$SMz$TMz$WFz$z$EFz$z$OLz$PLz$yHz$QLz$RLz$SLz$uLz$TLz$ULz$z$hIz$iIz$VLz$WLz$XLz$YLz$uIz$z$aIz$ZLz$aLz$bLz$z$vIz$cLz$dLz$yIz$AJz$BJz$CJz$eLz$fLz$gLz$UGz$z$hLz$iLz$pJz$jLz$kLz$lLz$OCz$mLz$nLz$oLz$hCz$z$gDz$hDz$z$NGz$OGz$PGz$z$uDz$z$pLz$qLz$rLz$sLz$tLz$uLz$vLz$wLz$xLz$BJz$CJz$yLz$XGz$YGz$z$yJz$UMz$z$AMz$uEz$z$FDz$z$iCz$BMz$CMz$DMz$OCz$EMz$FMz$GMz$HMz$IMz$z$JDz$z$iGz$z$FDz$z$UCz$VCz$WCz$z$iCz$jCz$kCz$lCz$aJz$rDz$VMz$WMz$XMz$YMz$ZMz$aMz$IBz$ADz$BDz$z$DDz$IHz$z$gDz$hDz$z$bMz$mDz$z$JDz$z$KDz$z$NCz$OCz$YKz$cMz$dMz$TCz$z$UCz$VCz$WCz$z$iCz$eMz$fMz$fMz$fMz$fMz$gMz$hMz$iMz$fMz$fMz$fMz$fMz$fMz$jMz$BDz$z$iCz$jCz$kMz$sKz$sKz$sKz$sKz$lMz$jBz$HCz$mMz$nMz$oMz$pMz$qMz$EHz$FHz$GHz$z$iCz$eMz$fMz$fMz$fMz$fMz$gMz$hMz$iMz$fMz$fMz$fMz$fMz$fMz$jMz$BDz$z$aIz$rMz$sMz$tMz$uMz$vMz$z$hIz$iIz$wMz$FEz$xMz$z$yMz$ANz$BNz$z$CNz$DNz$ENz$FNz$OCz$GNz$z$HNz$INz$z$vIz$JNz$KNz$LNz$MNz$OCz$mLz$GHz$z$DJz$z$EJz$NNz$ONz$PNz$z$QNz$ANz$RNz$z$bMz$mDz$z$fJz$z$yMz$ANz$RNz$z$PIz$mDz$z$fJz$z$SNz$cIz$TNz$UNz$z$gDz$hDz$z$cCz$DGz$kFz$OFz$PFz$RMz$nGz$SMz$TMz$WFz$z$EFz$z$QIz$z$FDz$z$UCz$VCz$WCz$z$iCz$jCz$kCz$lCz$aJz$VNz$WNz$XNz$dJz$YNz$EHz$FHz$GHz$z$DDz$EDz$z$gDz$hDz$z$NGz$OGz$PGz$z$JDz$z$fJz$z$ZNz$aNz$bNz$z$gDz$hDz$z$hJz$eGz$z$uDz$z$fJz$z$CNz$DNz$ENz$FNz$OCz$cNz$z$WKz$hIz$XKz$z$fJz$z$HNz$INz$z$uDz$z$UCz$VCz$WCz$z$fJz$z$dNz$eNz$fNz$gNz$hNz$iNz$jNz$kNz$lNz$z$xJz$z$iGz$z$KDz$z$cCz$AFz$BFz$mNz$nNz$WFz$z$EFz$z$iCz$oNz$z$XEz$XFz$DBz$z$JDz$z$NCz$OCz$pNz$qNz$rNz$TCz$z$gDz$CBz$z$sNz$tNz$uNz$vNz$wNz$xNz$yNz$AOz$z$BOz$COz$UCz$DOz$EOz$FOz$GOz$MEz$HOz$z$cCz$IOz$JOz$KOz$LOz$MOz$NOz$z$EFz$z$OOz$POz$IOz$JOz$KOz$LOz$MOz$NOz$z$DJz$z$QOz$ROz$SOz$TOz$UOz$z$UCz$VCz$VOz$WOz$BDz$z$XOz$BOz$YOz$ZOz$aOz$z$iGz$z$FDz$z$OOz$POz$IOz$JOz$bOz$LOz$MOz$NOz$z$DJz$z$QOz$ROz$cOz$TOz$UOz$z$UCz$VCz$VOz$WOz$BDz$z$XOz$BOz$YOz$dOz$aOz$z$iGz$z$JDz$z$KDz$z$NCz$OCz$eOz$fOz$z$gDz$CBz$z$sNz$tNz$uNz$vNz$wNz$xNz$yNz$AOz$z$BOz$COz$UCz$DOz$EOz$FOz$MEz$HOz$z$cCz$IOz$JOz$KOz$LOz$MOz$NOz$z$EFz$z$OOz$POz$IOz$JOz$KOz$LOz$MOz$NOz$z$DJz$z$QOz$ROz$SOz$gOz$hOz$iOz$z$UCz$VCz$VOz$WOz$BDz$z$XOz$BOz$YOz$ZOz$jOz$z$iGz$z$MOz$kOz$lOz$z$FDz$z$OOz$POz$IOz$JOz$bOz$LOz$MOz$NOz$z$DJz$z$QOz$ROz$cOz$gOz$hOz$iOz$z$UCz$VCz$VOz$WOz$BDz$z$XOz$BOz$YOz$dOz$jOz$z$uDz$z$iGz$z$MOz$kOz$lOz$z$JDz$z$KDz$z$NCz$OCz$QMz$mOz$nOz$z$UCz$VCz$WCz$z$iCz$jCz$PDz$QDz$IJz$JJz$LKz$oOz$MJz$pOz$nHz$qOz$dDz$eDz$fDz$z$gDz$CBz$z$dFz$rOz$sOz$mNz$tOz$z$uOz$vOz$WLz$wOz$xOz$z$yOz$APz$BPz$CPz$DPz$EPz$FPz$GPz$HPz$IPz$JPz$HOz$z$sOz$KPz$LPz$MPz$z$NPz$z$UCz$VCz$WCz$z$UCz$VCz$WCz$z$gDz$CBz$z$sNz$tNz$uNz$vNz$wNz$xNz$yNz$AOz$z$OPz$PPz$QPz$RPz$SPz$TPz$UPz$z$VPz$WPz$XPz$LOz$MOz$YPz$OPz$uIz$z$ZPz$aPz$bPz$VPz$cPz$uIz$z$dFz$dPz$RLz$ePz$fPz$gPz$hPz$iPz$jPz$kPz$lPz$mPz$nPz$oPz$pPz$qPz$GOz$MEz$rPz$sPz$tPz$SGz$uPz$WHz$vPz$wPz$xPz$yPz$AQz$BQz$gPz$iGz$CQz$mPz$tOz$z$OEz$PEz$DQz$EQz$FQz$RHz$z$OEz$PEz$yOz$GQz$z$iCz$jCz$kCz$lCz$QBz$HQz$IQz$IIz$JIz$KIz$z$UCz$VCz$WCz$z$WKz$hIz$XKz$z$KDz$z$NCz$OCz$pKz$mOz$nOz$z$UCz$VCz$WCz$z$iCz$jCz$PDz$QDz$IJz$JJz$KJz$JQz$MJz$pOz$RLz$KQz$LQz$IBz$ADz$BDz$z$gDz$CBz$z$QGz$MQz$NQz$OQz$PQz$QQz$RQz$gPz$iGz$z$iCz$SQz$QPz$RPz$SPz$TQz$UQz$VQz$WQz$KFz$MOz$UQz$XQz$z$UCz$VCz$WCz$z$UCz$VCz$WCz$z$HEz$YQz$UQz$UOz$z$DDz$NEz$z$ZQz$GOz$MEz$yFz$z$UCz$VCz$WCz$z$UCz$VCz$WCz$z$iCz$jCz$kCz$lCz$QBz$fHz$aQz$IIz$JIz$KIz$z$UCz$VCz$WCz$z$iCz$oNz$z$WKz$hIz$XKz$z$UCz$VCz$WCz$z$uDz$z$KDz$z$NCz$OCz$bQz$cQz$TCz$z$UCz$VCz$WCz$z$gDz$hDz$z$cCz$DGz$dQz$xNz$yNz$eQz$WFz$z$EFz$z$cCz$DGz$rPz$fQz$gQz$BQz$hQz$DFz$z$EFz$z$OEz$iQz$GOz$MEz$z$JDz$z$OEz$PEz$CBz$z$OEz$jQz$EQz$FQz$RHz$z$UCz$VCz$WCz$z$iCz$jCz$PDz$QDz$kQz$lQz$mQz$nQz$IBz$ADz$BDz$z$FDz$z$UCz$VCz$WCz$z$iCz$jCz$kCz$lCz$QBz$oQz$pQz$qQz$rQz$EHz$FHz$GHz$z$JDz$z$KDz$z$NCz$OCz$sQz$tQz$uQz$kGz$z$UCz$VCz$WCz$z$gDz$CBz$z$iCz$eMz$fMz$fMz$fMz$fMz$gMz$hMz$iMz$fMz$fMz$fMz$fMz$fMz$jMz$BDz$z$iCz$jCz$kMz$sKz$sKz$sKz$sKz$vQz$lCz$eBz$wQz$xQz$pOz$yQz$ARz$BRz$IBz$ADz$BDz$z$iCz$eMz$fMz$fMz$fMz$fMz$gMz$hMz$iMz$fMz$fMz$fMz$fMz$fMz$jMz$BDz$z$aIz$rMz$sMz$tMz$uMz$vMz$z$hIz$iIz$wMz$FEz$CRz$z$yMz$DRz$ERz$z$CNz$DNz$FRz$GRz$OCz$GNz$z$HNz$INz$z$vIz$cLz$HRz$IRz$JRz$KRz$LRz$MRz$z$DJz$z$EJz$NRz$KNz$ORz$z$QNz$DRz$PRz$z$iCz$jCz$PDz$QDz$IJz$JJz$lJz$mJz$QRz$FEz$pOz$nHz$KQz$dDz$eDz$fDz$z$cCz$RRz$SRz$TRz$URz$VRz$WRz$nNz$XRz$HFz$IFz$JFz$z$EFz$z$bMz$YRz$tOz$z$FDz$z$UCz$VCz$WCz$z$iCz$jCz$kCz$lCz$aJz$ZRz$aRz$bRz$XCz$cRz$dRz$eRz$fRz$gRz$z$UCz$VCz$WCz$z$iCz$jCz$hRz$iRz$jRz$kRz$lRz$mRz$nRz$oRz$pRz$eRz$fRz$qRz$EHz$FHz$GHz$z$UCz$VCz$WCz$z$WKz$hIz$XKz$z$UCz$VCz$WCz$z$JDz$z$fJz$z$yMz$DRz$PRz$z$iCz$jCz$PDz$QDz$IJz$JJz$lJz$mJz$rRz$FEz$pOz$nHz$KQz$dDz$eDz$fDz$z$PIz$YRz$tOz$z$fJz$z$CNz$DNz$FRz$GRz$OCz$cNz$z$WKz$hIz$XKz$z$fJz$z$HNz$INz$z$uDz$z$UCz$VCz$WCz$z$fJz$z$dNz$eNz$fNz$gNz$hNz$iNz$jNz$kNz$lNz$z$xJz$z$iGz$z$KDz$z$NCz$OCz$sRz$tRz$BJz$kGz$z$UCz$VCz$WCz$z$gDz$CBz$z$iCz$eMz$fMz$fMz$fMz$fMz$gMz$hMz$iMz$fMz$fMz$fMz$fMz$fMz$jMz$BDz$z$iCz$jCz$kMz$sKz$sKz$sKz$sKz$lMz$xBz$uRz$vRz$wRz$xRz$yRz$EHz$FHz$GHz$z$iCz$eMz$fMz$fMz$fMz$fMz$gMz$hMz$iMz$fMz$fMz$fMz$fMz$fMz$jMz$BDz$z$aIz$rMz$sMz$tMz$uMz$vMz$z$hIz$iIz$ASz$BSz$CSz$DSz$ENz$ESz$FSz$ENz$ESz$GSz$UNz$z$vIz$cLz$HRz$IRz$JRz$KRz$LRz$MRz$z$DJz$z$EJz$NRz$KNz$ORz$z$HSz$ENz$ISz$z$WDz$JSz$KSz$z$fJz$z$DSz$ENz$ISz$z$NGz$OGz$PGz$z$fJz$z$LSz$MSz$NSz$z$OSz$z$fJz$z$HNz$INz$z$uDz$z$UCz$VCz$WCz$z$fJz$z$dNz$eNz$fNz$gNz$hNz$iNz$jNz$kNz$lNz$z$xJz$z$iGz$z$KDz$z$NCz$OCz$PSz$QSz$z$gDz$hDz$z$iCz$jCz$NLz$z$aIz$RSz$SSz$TSz$USz$VSz$z$hIz$iIz$WSz$XSz$YSz$ZSz$aSz$bSz$cSz$dSz$eSz$fSz$gSz$hSz$iSz$jSz$kSz$GSz$UNz$z$vIz$cLz$HRz$IRz$JRz$KRz$LRz$MRz$z$DJz$z$EJz$NRz$KNz$ORz$z$lSz$mSz$nSz$UNz$z$oSz$pSz$qSz$rSz$sSz$tSz$z$LCz$MCz$z$iCz$jCz$kCz$lCz$QBz$uSz$kEz$vSz$wSz$xSz$ySz$IIz$JIz$ATz$BDz$z$OSz$z$fJz$z$iSz$jSz$BTz$z$oSz$pSz$CTz$DTz$ETz$FTz$z$LCz$MCz$z$bMz$mDz$z$fJz$z$GTz$HTz$ITz$JTz$KTz$LTz$MTz$NTz$uIz$z$oSz$OTz$eKz$PTz$QTz$RTz$STz$TTz$UTz$VTz$cGz$WTz$XTz$YTz$ZTz$aTz$bTz$cTz$Nz$Oz$Pz$Qz$Rz$Sz$Tz$Uz$Vz$Wz$Xz$Yz$Zz$az$bz$cz$dz$ez$fz$gz$hz$iz$jz$z$iCz$jCz$kCz$lCz$QBz$uSz$kEz$vSz$wSz$xSz$ySz$IIz$JIz$ATz$BDz$z$OSz$z$fJz$z$HNz$INz$z$uDz$z$UCz$VCz$WCz$z$fJz$z$dNz$eNz$fNz$gNz$hNz$iNz$jNz$kNz$lNz$z$xJz$z$iGz$z$KDz$z$dTz$eTz$fTz$gTz$hTz$iTz$FKz$z$jTz$eTz$fTz$kTz$lTz$iTz$FKz$z$iCz$jCz$NLz$z$DDz$mTz$z$LCz$MCz$z$bMz$mDz"
